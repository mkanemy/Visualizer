{"ast":null,"code":"import _toConsumableArray from \"/Users/Matt/Visualizer/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/Matt/Visualizer/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nvar seq = [[]];\nvar index;\n\nfunction delay(time) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, time);\n  });\n}\n\nexport default function bubbleSort(_x) {\n  return _bubbleSort.apply(this, arguments);\n}\n\nfunction _bubbleSort() {\n  _bubbleSort = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(arr) {\n    var elements, animationSeq, i, arrStyleOne, arrStyleTwo, temp;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            elements = document.getElementsByClassName('bar');\n            mergeSort(arr);\n            animationSeq = seq;\n            i = 1;\n\n          case 4:\n            if (!(i < animationSeq.length)) {\n              _context.next = 24;\n              break;\n            }\n\n            arrStyleOne = elements[animationSeq[i][1]].style; // color change\n\n            if (!(animationSeq[i][0] == 0)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 9;\n            return delay(5);\n\n          case 9:\n            arrStyleOne.backgroundColor = 'red';\n            _context.next = 12;\n            return delay(5);\n\n          case 12:\n            arrStyleOne.backgroundColor = '#f5f0e5';\n            _context.next = 21;\n            break;\n\n          case 15:\n            // height change\n            arrStyleTwo = elements[animationSeq[i][2]].style;\n            _context.next = 18;\n            return delay(5);\n\n          case 18:\n            temp = arrStyleOne.height;\n            arrStyleOne.height = arrStyleTwo.height;\n            arrStyleTwo.height = temp;\n\n          case 21:\n            i++;\n            _context.next = 4;\n            break;\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _bubbleSort.apply(this, arguments);\n}\n\nfunction merge(left, right) {\n  var sortedArr = []; // the sorted items will go here\n\n  while (left.length && right.length) {\n    // Insert the smallest item into sortedArr\n    if (left[0] < right[0]) {\n      sortedArr.push(left.shift());\n      seq.push([1, sortedArr.length - 1, index - left.length]);\n    } else {\n      sortedArr.push(right.shift());\n      seq.push([1, sortedArr.length - 1, index - 1 + left.length]);\n    }\n  } // Use spread operators to create a new array, combining the three arrays\n\n\n  return [].concat(sortedArr, _toConsumableArray(left), _toConsumableArray(right));\n}\n\nfunction mergeSort(arr) {\n  // Base case\n  if (arr.length <= 1) return arr;\n  var mid = Math.floor(arr.length / 2);\n  seq.push([0, mid]); // Recursive calls\n\n  var left = mergeSort(arr.slice(0, mid));\n  index = left.length;\n  var right = mergeSort(arr.slice(mid));\n  return merge(left, right);\n}","map":{"version":3,"names":["seq","index","delay","time","Promise","resolve","setTimeout","bubbleSort","arr","elements","document","getElementsByClassName","mergeSort","animationSeq","i","length","arrStyleOne","style","backgroundColor","arrStyleTwo","temp","height","merge","left","right","sortedArr","push","shift","mid","Math","floor","slice"],"sources":["/Users/Matt/Visualizer/app/src/Algorithms/Sorting/mergeSort.js"],"sourcesContent":["var seq = [[]];\nvar index;\n\nfunction delay(time) {\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n\nexport default async function bubbleSort(arr) {\n\n    var elements = document.getElementsByClassName('bar');\n\n    mergeSort(arr);\n\n    var animationSeq = seq;\n\n    for (var i = 1; i < animationSeq.length; i++) {\n\n        var arrStyleOne = elements[animationSeq[i][1]].style;\n\n        // color change\n        if (animationSeq[i][0] == 0) {\n            await delay(5);\n            arrStyleOne.backgroundColor = 'red';\n            await delay(5);\n            arrStyleOne.backgroundColor = '#f5f0e5';\n        } else {\n        // height change\n            var arrStyleTwo = elements[animationSeq[i][2]].style;\n            await delay(5);\n            var temp = arrStyleOne.height;\n            arrStyleOne.height = arrStyleTwo.height;\n            arrStyleTwo.height = temp;\n        }\n\n    }\n}\n\nfunction merge(left, right) {\n    let sortedArr = []; // the sorted items will go here\n    while (left.length && right.length) {\n        // Insert the smallest item into sortedArr\n        if (left[0] < right[0]) {\n            sortedArr.push(left.shift());\n            seq.push([1, sortedArr.length - 1, index - left.length])\n        } else {\n            sortedArr.push(right.shift());\n            seq.push([1, sortedArr.length - 1, index - 1 + left.length])\n        }\n    }\n\n    // Use spread operators to create a new array, combining the three arrays\n    return [...sortedArr, ...left, ...right]\n}\n\nfunction mergeSort(arr) {\n    // Base case\n    if (arr.length <= 1) return arr\n    let mid = Math.floor(arr.length / 2)\n    seq.push([0, mid]);\n    // Recursive calls\n    let left = mergeSort(arr.slice(0, mid));\n    index = left.length;\n    let right = mergeSort(arr.slice(mid));\n    return merge(left, right);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}