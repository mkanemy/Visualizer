{"ast":null,"code":"export default function dijkstraAlgorithm(arr, start, end) {\n  var size = arr.length * arr[1].length;\n  var current = start;\n  var currentDis = 0;\n  var newDis = 0;\n\n  for (var i = size; i > 0; i--) {\n    if (arr[current[0]][current[1]][0] == -2) {\n      return;\n    }\n\n    if (currentDis != 0) {\n      currentDis = arr[current[0]][current[1]][0];\n    }\n\n    if (current[0] < 0 || current[0] > arr[1].length || current[1] < 0 || current[1] > arr.length) {\n      return;\n    }\n\n    arr[current[0]][current[1]][0] = -5; // if (arr[current[0]+1][current[1]][0] != -5) {\n    //     arr[start[0]+1][start[1]][1].style.backgroundColor = 'blue';\n    //     newDis = currentDis + 1;\n    //     if (newDis < arr[current[0]+1][current[1]][0]) {\n    //         arr[current[0]+1][current[1]][0] = newDis;\n    //         // SET PARENT????\n    //         current = arr[current[0]+1][current[1]][0];\n    //     }\n    // }\n    // if (arr[current[0]-1][current[1]][0] != -5) {\n    //     arr[start[0]-1][start[1]][1].style.backgroundColor = 'blue';\n    //     newDis = currentDis + 1;\n    //     if (newDis < arr[current[0]-1][current[1]][0]) {\n    //         arr[current[0]-1][current[1]][0] = newDis;\n    //         // SET PARENT????\n    //     }\n    // }\n\n    var val = arr[current[0]][current[1] + 1];\n\n    if (val[0] != -5) {\n      val[1].style.backgroundColor = 'orange';\n      newDis = currentDis + 1;\n      console.log();\n\n      if (newDis < val[0]) {\n        val[0] = newDis; // SET PARENT????\n\n        current = [current[0], current[1] + 1];\n      }\n    } // if (arr[current[0]][current[1]-1][0] != -5) {\n    //     arr[start[0]][start[1]-1][1].style.backgroundColor = 'blue';\n    //     newDis = currentDis + 1;\n    //     if (newDis < arr[current[0]][current[1]-1][0]) {\n    //         arr[current[0]][current[1]-1][0] = newDis;\n    //         // SET PARENT????\n    //     }\n    // }\n\n  }\n}","map":{"version":3,"names":["dijkstraAlgorithm","arr","start","end","size","length","current","currentDis","newDis","i","val","style","backgroundColor","console","log"],"sources":["/Users/Matt/Visualizer/app/src/Algorithms/PathFinding/dijkstra.js"],"sourcesContent":["export default function dijkstraAlgorithm(arr, start, end) {\n    var size = arr.length * arr[1].length;\n    var current = start;\n    var currentDis = 0;\n    var newDis = 0;\n\n    for (var i = size; i > 0; i--) {\n        if (arr[current[0]][current[1]][0] == -2) {\n            return;\n        }\n        if (currentDis != 0) {\n            currentDis = arr[current[0]][current[1]][0];\n        }\n\n        if (current[0] < 0 || current[0] > arr[1].length || current[1] < 0 || current[1] > arr.length) {\n            return;\n        }\n\n        arr[current[0]][current[1]][0] = -5;\n\n        // if (arr[current[0]+1][current[1]][0] != -5) {\n        //     arr[start[0]+1][start[1]][1].style.backgroundColor = 'blue';\n        //     newDis = currentDis + 1;\n        //     if (newDis < arr[current[0]+1][current[1]][0]) {\n        //         arr[current[0]+1][current[1]][0] = newDis;\n        //         // SET PARENT????\n        //         current = arr[current[0]+1][current[1]][0];\n        //     }\n        // }\n        // if (arr[current[0]-1][current[1]][0] != -5) {\n        //     arr[start[0]-1][start[1]][1].style.backgroundColor = 'blue';\n        //     newDis = currentDis + 1;\n        //     if (newDis < arr[current[0]-1][current[1]][0]) {\n        //         arr[current[0]-1][current[1]][0] = newDis;\n        //         // SET PARENT????\n        //     }\n        // }\n        var val = arr[current[0]][current[1]+1];\n        if (val[0] != -5) {\n            val[1].style.backgroundColor = 'orange';\n            newDis = currentDis + 1;\n            console.log()\n            if (newDis < val[0]) {\n                val[0] = newDis;\n                // SET PARENT????\n                current = [current[0], current[1]+1];\n            }\n        }\n        // if (arr[current[0]][current[1]-1][0] != -5) {\n        //     arr[start[0]][start[1]-1][1].style.backgroundColor = 'blue';\n        //     newDis = currentDis + 1;\n        //     if (newDis < arr[current[0]][current[1]-1][0]) {\n        //         arr[current[0]][current[1]-1][0] = newDis;\n        //         // SET PARENT????\n        //     }\n        // }\n    }\n}"],"mappings":"AAAA,eAAe,SAASA,iBAAT,CAA2BC,GAA3B,EAAgCC,KAAhC,EAAuCC,GAAvC,EAA4C;EACvD,IAAIC,IAAI,GAAGH,GAAG,CAACI,MAAJ,GAAaJ,GAAG,CAAC,CAAD,CAAH,CAAOI,MAA/B;EACA,IAAIC,OAAO,GAAGJ,KAAd;EACA,IAAIK,UAAU,GAAG,CAAjB;EACA,IAAIC,MAAM,GAAG,CAAb;;EAEA,KAAK,IAAIC,CAAC,GAAGL,IAAb,EAAmBK,CAAC,GAAG,CAAvB,EAA0BA,CAAC,EAA3B,EAA+B;IAC3B,IAAIR,GAAG,CAACK,OAAO,CAAC,CAAD,CAAR,CAAH,CAAgBA,OAAO,CAAC,CAAD,CAAvB,EAA4B,CAA5B,KAAkC,CAAC,CAAvC,EAA0C;MACtC;IACH;;IACD,IAAIC,UAAU,IAAI,CAAlB,EAAqB;MACjBA,UAAU,GAAGN,GAAG,CAACK,OAAO,CAAC,CAAD,CAAR,CAAH,CAAgBA,OAAO,CAAC,CAAD,CAAvB,EAA4B,CAA5B,CAAb;IACH;;IAED,IAAIA,OAAO,CAAC,CAAD,CAAP,GAAa,CAAb,IAAkBA,OAAO,CAAC,CAAD,CAAP,GAAaL,GAAG,CAAC,CAAD,CAAH,CAAOI,MAAtC,IAAgDC,OAAO,CAAC,CAAD,CAAP,GAAa,CAA7D,IAAkEA,OAAO,CAAC,CAAD,CAAP,GAAaL,GAAG,CAACI,MAAvF,EAA+F;MAC3F;IACH;;IAEDJ,GAAG,CAACK,OAAO,CAAC,CAAD,CAAR,CAAH,CAAgBA,OAAO,CAAC,CAAD,CAAvB,EAA4B,CAA5B,IAAiC,CAAC,CAAlC,CAZ2B,CAc3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,IAAII,GAAG,GAAGT,GAAG,CAACK,OAAO,CAAC,CAAD,CAAR,CAAH,CAAgBA,OAAO,CAAC,CAAD,CAAP,GAAW,CAA3B,CAAV;;IACA,IAAII,GAAG,CAAC,CAAD,CAAH,IAAU,CAAC,CAAf,EAAkB;MACdA,GAAG,CAAC,CAAD,CAAH,CAAOC,KAAP,CAAaC,eAAb,GAA+B,QAA/B;MACAJ,MAAM,GAAGD,UAAU,GAAG,CAAtB;MACAM,OAAO,CAACC,GAAR;;MACA,IAAIN,MAAM,GAAGE,GAAG,CAAC,CAAD,CAAhB,EAAqB;QACjBA,GAAG,CAAC,CAAD,CAAH,GAASF,MAAT,CADiB,CAEjB;;QACAF,OAAO,GAAG,CAACA,OAAO,CAAC,CAAD,CAAR,EAAaA,OAAO,CAAC,CAAD,CAAP,GAAW,CAAxB,CAAV;MACH;IACJ,CAzC0B,CA0C3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACH;AACJ"},"metadata":{},"sourceType":"module"}